{"version":3,"sources":["http-common.js","App.js","reportWebVitals.js","index.js"],"names":["axios","create","baseURL","headers","App","post_title","useRef","post_description","useState","postLogin","setLoginResult","fortmatResponse","res","JSON","stringify","a","postData","email","current","value","password","apiClient","post","result","status","statusText","data","response","id","className","type","ref","placeholder","onClick","role","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAEeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,wBACTC,QAAS,CACP,eAAgB,sB,OCmGLC,MAnGf,WACE,IAAMC,EAAaC,iBAAO,MACpBC,EAAmBD,iBAAO,MAEhC,EAAoCE,mBAAS,MAA7C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAkB,SAACC,GACvB,OAAOC,KAAKC,UAAUF,EAAK,KAAM,IAPtB,4CAcb,kCAAAG,EAAA,6DACQC,EAAW,CACfC,MAAOZ,EAAWa,QAAQC,MAC1BC,SAAUb,EAAiBW,QAAQC,OAHvC,kBAOsBE,EAAUC,KAC1B,8BACAN,EACA,CACEb,QAAS,CACP,iBAAkB,iBAZ5B,OAOUS,EAPV,OAiBUW,EAAS,CACbC,OAAQZ,EAAIY,OAAS,IAAMZ,EAAIa,WAC/BtB,QAASS,EAAIT,QACbuB,KAAMd,EAAIc,MAGZhB,EAAeC,EAAgBY,IAvBnC,gDAyBIb,EAAeC,GAAgB,eAAIgB,gBAAJ,eAAcD,OAAd,OAzBnC,0DAda,sBA2Cb,OACE,sBAAKE,GAAG,MAAMC,UAAU,iBAAxB,UACE,8DAEA,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,cAAf,SACE,sEAEF,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,aAAf,SACE,uBACEC,KAAK,OACLD,UAAU,eACVE,IAAK1B,EACL2B,YAAY,oBACZ,cAAY,YAGhB,qBAAKH,UAAU,aAAf,SACE,uBACEC,KAAK,WACLD,UAAU,eACVE,IAAKxB,EACLyB,YAAY,WACZ,cAAY,eAGhB,wBACEH,UAAU,yBACVI,QAxEG,2CAyEH,cAAY,cAHd,0BAOA,wBACEJ,UAAU,8BACVI,QArEe,WACvBvB,EAAe,OAkET,mBAOCD,GACC,qBACEoB,UAAU,6BACVK,KAAK,QACL,cAAY,SAHd,SAKE,8BAAMzB,gBCnFL0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.01eccfe2.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://reqres.in/api\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\",\r\n  },\r\n});\r\n","import React, { useRef, useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport apiClient from \"./http-common\";\r\n\r\nfunction App() {\r\n  const post_title = useRef(null);\r\n  const post_description = useRef(null);\r\n\r\n  const [postLogin, setLoginResult] = useState(null);\r\n\r\n  const fortmatResponse = (res) => {\r\n    return JSON.stringify(res, null, 2);\r\n  };\r\n\r\n  const clearLoginOutput = () => {\r\n    setLoginResult(null);\r\n  };\r\n\r\n  async function login() {\r\n    const postData = {\r\n      email: post_title.current.value,\r\n      password: post_description.current.value,\r\n    };\r\n\r\n    try {\r\n      const res = await apiClient.post(\r\n        \"https://reqres.in/api/login\",\r\n        postData,\r\n        {\r\n          headers: {\r\n            \"x-access-token\": \"token-value\",\r\n          },\r\n        }\r\n      );\r\n\r\n      const result = {\r\n        status: res.status + \" \" + res.statusText,\r\n        headers: res.headers,\r\n        data: res.data,\r\n      };\r\n\r\n      setLoginResult(fortmatResponse(result));\r\n    } catch (err) {\r\n      setLoginResult(fortmatResponse(err.response?.data || err));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"app\" className=\"container my-3\">\r\n      <h3>Mega Login Plus triMax power</h3>\r\n\r\n      <div className=\"card mt-3\">\r\n        <div className=\"card-header\">\r\n          <code>eve.holt@reqres.in // cityslicka</code>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              ref={post_title}\r\n              placeholder=\"example@email.com\"\r\n              data-testid=\"email\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              ref={post_description}\r\n              placeholder=\"password\"\r\n              data-testid=\"password\"\r\n            />\r\n          </div>\r\n          <button\r\n            className=\"btn btn-sm btn-primary\"\r\n            onClick={login}\r\n            data-testid=\"button-send\"\r\n          >\r\n            Secure Login\r\n          </button>\r\n          <button\r\n            className=\"btn btn-sm btn-warning ml-2\"\r\n            onClick={clearLoginOutput}\r\n          >\r\n            Clear\r\n          </button>\r\n\r\n          {postLogin && (\r\n            <div\r\n              className=\"alert alert-secondary mt-2\"\r\n              role=\"alert\"\r\n              data-testid=\"resume\"\r\n            >\r\n              <pre>{postLogin}</pre>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}